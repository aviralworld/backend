variables:
  CARGO_INCREMENTAL: 0
  RUST_VERSION: 1.49.0
  POSTGRES_VERSION: 12
  KANIKO_AUTH_CONFIG: >-
      {
        "auths": {
          "$CI_REGISTRY": {
            "username": "$CI_REGISTRY_USER",
            "password": "$CI_REGISTRY_PASSWORD"
          }
        }
      }

stages:
  - check
  - docker-base
  - docker

style:
  stage: check
  image: rust:${RUST_VERSION}-alpine
  before_script:
    - rustup component add rustfmt
  script:
    - cargo fmt -- --check
  only:
    - merge_requests
  interruptible: yes

test:
  stage: check
  services:
    - postgres:12.3-alpine@sha256:4c5db602c06b811737746e4564040e554ba68cd2ded46a736cbe1af3a638ed0a
    - adobe/s3mock:2.1.24@sha256:f444c12e38050dcf339e8784cacfa40d14a4876503d2818982acb7f117ef03df
  image: rust:${RUST_VERSION}-slim
  cache:
    paths:
      - .cargo
    key:
      prefix: "test-"
      files:
        - Cargo.toml
        - Cargo.lock
  variables:
    # silence apt-get
    DEBIAN_FRONTEND: noninteractive

    CARGO_HOME: .cargo

    # credentials (not required for testing)
    S3_ACCESS_KEY: ""
    S3_SECRET_ACCESS_KEY: ""

    # S3Mock configuration
    INITIALBUCKETS: $S3_BUCKET_NAME

    # S3 configuration
    S3_BUCKET_NAME: avw-recordings
    S3_REGION_NAME: local
    S3_ENDPOINT: http://adobe-s3mock:9090
    S3_BASE_URL: $S3_ENDPOINT/$S3_BUCKET_NAME/

    BACKEND_S3_CONTENT_TYPE: audio/ogg
    BACKEND_S3_ACL: public-read
    BACKEND_S3_CACHE_CONTROL: "public, max-age: 604800, immutable"

    BACKEND_ENABLE_WARP_LOGGING: 1
    BACKEND_MEDIA_CODEC: opus
    BACKEND_MEDIA_EXTENSION: ogg
    BACKEND_MEDIA_FORMAT: ogg
    BACKEND_FFPROBE_PATH: ffprobe
    BACKEND_TEST_INITIALIZE_DB: 1
    BACKEND_BASE_URL: https://www.example.com/
    BACKEND_RECORDINGS_PATH: recordings

    POSTGRES_USER: postgres
    POSTGRES_PASSWORD: 1234     # used by postgres container
    POSTGRES_HOST: postgres
    POSTGRES_PORT: 5432
    POSTGRES_DB_NAME: avw

    BACKEND_DB_CONNECTION_STRING: "postgresql://$POSTGRES_USER:$POSTGRES_PASSWORD@$POSTGRES_HOST:$POSTGRES_PORT/$POSTGRES_DB_NAME"

    # equivalent to #![deny(warnings)]
    RUSTFLAGS: "-D warnings"
  before_script:
    # TODO also test with `ffmpeg-next`
    - apt-get -o=Dpkg::Use-Pty=0 -qqy update && apt-get -o=Dpkg::Use-Pty=0 -qqy install libssl-dev pkg-config ffmpeg libsqlite3-dev postgresql-client
    - PGPASSWORD=$POSTGRES_PASSWORD createdb -h $POSTGRES_HOST -p $POSTGRES_PORT -U $POSTGRES_USER $POSTGRES_DB_NAME
    - rustup default stable
    - rustup component add clippy
  script:
    - cargo fetch
    - cargo clippy --release --frozen
    - cargo test --release --frozen --no-fail-fast
  only:
    - merge_requests
  interruptible: yes

docker-base:
  stage: docker-base
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  artifacts:
    paths:
      - .gitlab-ci-timestamp
  script:
    - echo $KANIKO_AUTH_CONFIG > /kaniko/.docker/config.json
    - export build_timestamp=`date +%Y%m%d%H%M%S`
    - export tag="v$build_timestamp"
    - echo $tag > .gitlab-ci-timestamp
    - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/Dockerfile.base --cache=true --destination=$CI_REGISTRY_IMAGE/base:$tag --destination=$CI_REGISTRY_IMAGE/base:latest --build-arg RUST_VERSION=$RUST_VERSION --build-arg REVISION=$CI_COMMIT_SHA --build-arg TIMESTAMP=$build_timestamp
  only:
    - master

docker:
  stage: docker
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  dependencies:
    - docker-base
  script:
    - echo $KANIKO_AUTH_CONFIG > /kaniko/.docker/config.json
    - export build_timestamp=`date +%Y%m%d%H%M%S`
    - export tag=`echo $(cat .gitlab-ci-timestamp)`
    - echo $tag
    - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/Dockerfile --cache=true --destination=$CI_REGISTRY_IMAGE:$tag --destination=$CI_REGISTRY_IMAGE:latest --build-arg BASE_IMAGE=$CI_REGISTRY_IMAGE/base:$tag --build-arg REVISION=$CI_COMMIT_SHA --build-arg TIMESTAMP=$build_timestamp
  only:
    - master
  interruptible: yes

docker-db:
  stage: docker
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  dependencies:
    - docker-base
  script:
    - echo $KANIKO_AUTH_CONFIG > /kaniko/.docker/config.json
    - export build_timestamp=`date +%Y%m%d%H%M%S`
    - export tag=`echo $(cat .gitlab-ci-timestamp)`
    - echo $tag
    - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/Dockerfile.db --cache=true --destination=$CI_REGISTRY_IMAGE/db:$tag --destination=$CI_REGISTRY_IMAGE/db:latest --build-arg BASE_IMAGE=$CI_REGISTRY_IMAGE/base:$tag --build-arg REVISION=$CI_COMMIT_SHA --build-arg POSTGRES_VERSION=12 --build-arg TIMESTAMP=$build_timestamp
  only:
    - master
  interruptible: yes
